# If you do wish to disable the rest api, you'll need to go into the config.yml set rest-api.enabled to false.
# Please note that the Rest API will let players do things that they might not be able to do in-game.
# For example if a player does not have permission to delete warps, or the delete command is disabled. It will still let them!
settings:
  # What is port of the web server?
  # This will be counted as the "insecure" port.
  port: 80
  # What is the IP address of the web server?
  # Leave this blank to bind to all interfaces.
  address: ""
  # Enable debug mode for the web server?
  debug: false
  # Manage SSL for the web server.
  ssl:
    # Do you want to enable SSL? If you want to enable SSL you will need to go into the ssl folder and fill in your private key and certificate.
    # Please note if you don't know how certificates work, you shouldn't even be enabling this REST API.
    # Also note if this is true and your users are using the Websocket API. THEY NEED TO USE WSS:// INSTEAD OF WS:// OTHERWISE they'll get prompted with 302
    enabled: false
    # What should the port be for SSL?
    # Ideally, remember the default port for SSL is 443. If you're not using 443 and you're using cloudflare, making sure the A record is not proxied otherwise you'll not be able to override the port.
    port: 443

  sub-commands:
    # Enable or disable the rest api sub commands.
    # Disabling this will prevent players from generating api keys which are required to use the rest api.
    apitokens-command: true
    # This is a subcommand of the main command of the plugin.
    apitokens-command-name: "apitokens"

    # Enable or disable sub commands of "apitokens"
    generate-subcommand: true
    delete-subcommand: true

    # Sub command names of "apitokens" sub command
    generate-subcommand-name: "generate"
    delete-subcommand-name: "delete"

  # Confirmation time to either generate or delete an api key.
  # This is in seconds.
  confirmation-time: 15
  # The API may expose a lot of information that you may not want exposed, like exposing warp locations etc.
  # To fix this, you can toggle this setting where the api will only expose the information that the player can already access.
  # Like for example, if a player set their own warp, they'll get the set warp event. Another example would be where they can only get information for their warps and only their player object.
  expose-only-player-information: true
  # The documentation link, this will be shown on the RestAPI website as well in-game, I highly suggest you setup your own documentation
  # so the developers know what IP address to use for the API and also including the endpoints.
  documentation: "https://docs.olziedev.com/projects/playerwarps/restapi"

  # Enable or disable the rest api.
  endpoints:
    get:
      getPlayerWarpByName: true
      getPlayerWarpByID: true
      getSponsorWarpByID: true
      getPlayerWarps: true
      getWarpPlayerByUUID: true
      getWarpCategories: true
      getWarpCategoryByName: true
    delete:
      deletePlayerWarpByName: true
      deletePlayerWarpByID: true

  # Enable or disable specific events sent via the websocket.
  events:
    PlayerWarpCreateEvent: true
    PlayerWarpTeleportEvent: true
    PlayerWarpSponsorEvent: true
    PlayerWarpRentEvent: true
    PlayerWarpRemoveEvent: true
    WarpPlayerUpdateEvent: true
    PlayerWarpUpdateEvent: true
